[{"C:\\Users\\sridivya\\skillcrush\\React-JS\\noticeboard\\src\\index.js":"1","C:\\Users\\sridivya\\skillcrush\\React-JS\\noticeboard\\src\\App.js":"2","C:\\Users\\sridivya\\skillcrush\\React-JS\\noticeboard\\src\\reportWebVitals.js":"3","C:\\Users\\sridivya\\skillcrush\\React-JS\\noticeboard\\src\\components\\notices\\notices.jsx":"4","C:\\Users\\sridivya\\skillcrush\\React-JS\\noticeboard\\src\\components\\noticeitems\\noticeitems.jsx":"5","C:\\Users\\sridivya\\skillcrush\\React-JS\\noticeboard\\src\\components\\notices\\Notices.jsx":"6","C:\\Users\\sridivya\\skillcrush\\React-JS\\noticeboard\\src\\components\\noticeitems\\NoticeItems.jsx":"7","C:\\Users\\sridivya\\skillcrush\\React-JS\\noticeboard\\src\\components\\notices\\noticesCsv.jsx":"8","C:\\Users\\sridivya\\skillcrush\\React-JS\\noticeboard\\src\\components\\DateandTimePicker\\dateandtime.jsx":"9","C:\\Users\\sridivya\\skillcrush\\React-JS\\noticeboard\\src\\components\\bargraph\\bargraph.jsx":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":189,"mtime":1607308898792,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":2008,"mtime":1607314857641,"results":"15","hashOfConfig":"16"},{"size":1174,"mtime":1607316631806,"results":"17","hashOfConfig":"16"},{"size":4780,"mtime":1609028556921,"results":"18","hashOfConfig":"12"},{"size":3747,"mtime":1609028484501,"results":"19","hashOfConfig":"12"},{"size":202,"mtime":1607483298883,"results":"20","hashOfConfig":"16"},{"size":1049,"mtime":1608146491261,"results":"21","hashOfConfig":"16"},{"size":904,"mtime":1608747118728,"results":"22","hashOfConfig":"12"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1ctsmo9",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f3gk6d",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"C:\\Users\\sridivya\\skillcrush\\React-JS\\noticeboard\\src\\index.js",[],["47","48"],"C:\\Users\\sridivya\\skillcrush\\React-JS\\noticeboard\\src\\App.js",[],"C:\\Users\\sridivya\\skillcrush\\React-JS\\noticeboard\\src\\reportWebVitals.js",[],"C:\\Users\\sridivya\\skillcrush\\React-JS\\noticeboard\\src\\components\\notices\\notices.jsx",[],"C:\\Users\\sridivya\\skillcrush\\React-JS\\noticeboard\\src\\components\\noticeitems\\noticeitems.jsx",[],["49","50"],"C:\\Users\\sridivya\\skillcrush\\React-JS\\noticeboard\\src\\components\\notices\\Notices.jsx",["51","52"],"import React from 'react';\r\nimport './Notices.css';\r\nimport { Component } from \"react\";\r\nimport NoticeItems from '../noticeitems/NoticeItems';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\n\r\n\r\n\r\nexport default class Notices extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        /* Declaring State Variables */\r\n        this.state = {\r\n            val: '',\r\n            list: [],\r\n            flag: false,\r\n            startTime: '',\r\n            duration: '',\r\n            csvData: [],\r\n            count:''\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleDateChange = this.handleDateChange.bind(this);\r\n        this.handleDurationChange = this.handleDurationChange.bind(this);\r\n        //this.csvData = [\"Notice\", \"Notice Key\", \"Notice Start Time\", \"Notice Duration\",\"Notice Status\"];\r\n        //this.tempArray = [this.csvData];\r\n    }\r\n    //Getting the Notices Value\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            val: event.target.value\r\n        });\r\n    }\r\n    //Getting the Start Time for notices\r\n    handleDateChange = (event) => {   \r\n        this.setState({\r\n            startTime: event.target.value\r\n        });\r\n       \r\n    };\r\n    //Getting the duration or notices\r\n\r\n    handleDurationChange = (event) => {\r\n        console.log('Duration value is', event.target.value);\r\n        this.setState({\r\n            duration: event.target.value\r\n        });\r\n       \r\n    };\r\n    /* The handlesubmit is being called on form submit\r\n       To Add Notices */\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.val !== \"\") {\r\n            var systemTime = new Date().getTime();\r\n            const noticeStartTime = new Date(this.state.startTime).getTime();\r\n            var toDoListArr = {\r\n                text: this.state.val,\r\n                key: Date.now(),\r\n                startTime: this.state.startTime,    \r\n                duration: this.state.duration,\r\n                active:true,\r\n                color:'green'\r\n            };\r\n            const newItems = [...this.state.list, toDoListArr];\r\n            var listCount=0;\r\n              listCount = (listCount + 1);       \r\n            const millis = ((noticeStartTime - systemTime));    \r\n            // console.log(`seconds elapsed = ${Math.floor(millis / 1000)}`);           \r\n            setTimeout(() => {\r\n                this.setState({\r\n                    list: newItems,\r\n                    count:listCount   \r\n                });\r\n            },0);   \r\n            //console.log(\"count is\",this.state.count);\r\n            /* Writing file data into csv*/\r\n               \r\n             let csvRow = this.state.list.map((n) =>({  \r\n                Notice: n.text,\r\n                NoticeKey:n.key,\r\n                NoticeStartTime:n.startTime,\r\n                NoticeDurartion:n.duration,\r\n                NoticeStatus:n.active\r\n              })); \r\n           \r\n                this.setState({\r\n                    csvData: csvRow\r\n                });\r\n                //console.log(\"csvData\", this.state.csvData);\r\n\r\n                }\r\n                else { console.log(\"Please Enter The task\"); }\r\n\r\n                this.setState({\r\n                    val: '',\r\n                    startTime: '',\r\n                    duration: ''\r\n                });  \r\n       }\r\n    \r\n   \r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <h1>Notice Board</h1>\r\n                <div className='notices'>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <input type=\"text\" value={this.state.val} onChange={this.handleChange} placeholder=\"Enter Your Notices\" />\r\n                        <TextField\r\n                            id=\"datetime-local\"\r\n                            type=\"datetime-local\"\r\n                            value={this.state.startTime}\r\n                            onChange={this.handleDateChange}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                         />\r\n                        <input type=\"num\" value={this.state.duration} onChange={this.handleDurationChange} placeholder=\"Enter Duration\" />\r\n                        <button> Add Notices</button>\r\n\r\n                    </form>\r\n                    <CSVLink data={this.state.csvData} separator={\",\"}><button>Download</button></CSVLink>\r\n                </div>\r\n                <NoticeItems listItems={this.state.list} count={this.state.count} delete={this.deleteItem} />\r\n             \r\n            </div>\r\n        )\r\n    }\r\n\r\n}","C:\\Users\\sridivya\\skillcrush\\React-JS\\noticeboard\\src\\components\\noticeitems\\NoticeItems.jsx",[],"C:\\Users\\sridivya\\skillcrush\\React-JS\\noticeboard\\src\\components\\notices\\noticesCsv.jsx",["53"],"C:\\Users\\sridivya\\skillcrush\\React-JS\\noticeboard\\src\\components\\DateandTimePicker\\dateandtime.jsx",[],["54","55"],"C:\\Users\\sridivya\\skillcrush\\React-JS\\noticeboard\\src\\components\\bargraph\\bargraph.jsx",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"56","replacedBy":"60"},{"ruleId":"58","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":6,"column":19,"nodeType":"64","messageId":"65","endLine":6,"endColumn":30},{"ruleId":"62","severity":1,"message":"66","line":72,"column":19,"nodeType":"64","messageId":"65","endLine":72,"endColumn":25},{"ruleId":"62","severity":1,"message":"67","line":1,"column":7,"nodeType":"64","messageId":"65","endLine":1,"endColumn":9},{"ruleId":"56","replacedBy":"68"},{"ruleId":"58","replacedBy":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],["70"],["71"],"no-unused-vars","'CSVDownload' is defined but never used.","Identifier","unusedVar","'millis' is assigned a value but never used.","'fs' is assigned a value but never used.",["70"],["71"],"no-global-assign","no-unsafe-negation"]